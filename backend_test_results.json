{
  "total_tests": 13,
  "passed": 10,
  "failed": 3,
  "success_rate": 76.92307692307693,
  "results": [
    {
      "test": "Server Connectivity",
      "success": false,
      "details": "Unexpected response message",
      "timestamp": "2025-07-20T13:05:50.331996",
      "response_data": {
        "message": "Elva AI Backend with Advanced Hybrid Routing! \ud83e\udd16\u2728\ud83e\udde0",
        "version": "2.0"
      }
    },
    {
      "test": "Intent Detection - General Chat",
      "success": true,
      "details": "Correctly classified as general_chat, response: I'm just a language model, I don't have emotions or feelings like humans do, so I don't have good or...",
      "timestamp": "2025-07-20T13:05:51.723913",
      "response_data": null
    },
    {
      "test": "Intent Detection - Send Email",
      "success": true,
      "details": "Correctly classified as send_email with pre-filled data: recipient_name='Sarah', subject='Quarterly Report Update...', body populated",
      "timestamp": "2025-07-20T13:05:58.514888",
      "response_data": null
    },
    {
      "test": "Intent Detection - Create Event",
      "success": false,
      "details": "Missing intent fields: ['participants']",
      "timestamp": "2025-07-20T13:06:07.424814",
      "response_data": {
        "intent": "create_event",
        "event_title": "Team Meeting",
        "date": "tomorrow",
        "time": "2pm"
      }
    },
    {
      "test": "Intent Detection - Add Todo",
      "success": true,
      "details": "Correctly classified as add_todo with pre-filled data: task='Finish the project'",
      "timestamp": "2025-07-20T13:06:15.725168",
      "response_data": null
    },
    {
      "test": "Intent Detection - Set Reminder",
      "success": true,
      "details": "Correctly classified as set_reminder with pre-filled data: reminder_text='Call mom'",
      "timestamp": "2025-07-20T13:06:22.787854",
      "response_data": null
    },
    {
      "test": "Approval Workflow - Approved",
      "success": true,
      "details": "Action approved and sent to n8n webhook",
      "timestamp": "2025-07-20T13:06:27.256582",
      "response_data": null
    },
    {
      "test": "Approval Workflow - Rejected",
      "success": true,
      "details": "Action correctly rejected",
      "timestamp": "2025-07-20T13:06:30.570931",
      "response_data": null
    },
    {
      "test": "Approval Workflow - Edited Data",
      "success": true,
      "details": "Action approved with edited data",
      "timestamp": "2025-07-20T13:06:43.105619",
      "response_data": null
    },
    {
      "test": "Chat History - Retrieval",
      "success": true,
      "details": "Retrieved 7 messages from history",
      "timestamp": "2025-07-20T13:06:43.631248",
      "response_data": null
    },
    {
      "test": "Chat History - Clearing",
      "success": true,
      "details": "Chat history successfully cleared",
      "timestamp": "2025-07-20T13:06:44.181729",
      "response_data": null
    },
    {
      "test": "Error Handling - Invalid Message ID",
      "success": true,
      "details": "Correctly returned 404 for invalid message ID",
      "timestamp": "2025-07-20T13:06:44.706185",
      "response_data": null
    },
    {
      "test": "Health Endpoint - Hybrid AI",
      "success": false,
      "details": "Missing fields: ['hybrid_ai_system']",
      "timestamp": "2025-07-20T13:06:45.226522",
      "response_data": {
        "status": "healthy",
        "mongodb": "connected",
        "advanced_hybrid_ai_system": {
          "version": "2.0",
          "groq_api_key": "configured",
          "claude_api_key": "configured",
          "groq_model": "llama3-8b-8192",
          "claude_model": "claude-3-5-sonnet-20241022",
          "sophisticated_features": {
            "task_classification": [
              "primary_intent",
              "emotional_complexity",
              "professional_tone",
              "creative_requirement",
              "technical_complexity",
              "response_length",
              "user_engagement_level",
              "context_dependency",
              "reasoning_type"
            ],
            "routing_strategies": [
              "intent_based",
              "emotional_routing",
              "professional_routing",
              "creative_routing",
              "sequential_execution",
              "context_enhancement"
            ],
            "advanced_capabilities": [
              "conversation_history_tracking",
              "context_aware_responses",
              "fallback_mechanisms",
              "confidence_scoring",
              "routing_explanation"
            ]
          },
          "routing_models": {
            "claude_tasks": [
              "high_emotional",
              "creative_content",
              "conversational",
              "professional_warm"
            ],
            "groq_tasks": [
              "logical_reasoning",
              "structured_analysis",
              "technical_complex",
              "intent_detection"
            ],
            "sequential_tasks": [
              "professional_emails",
              "linkedin_posts",
              "complex_creative"
            ]
          }
        },
        "n8n_webhook": "configured"
      }
    }
  ]
}